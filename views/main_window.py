import tkinter as tk
from tkinter import messagebox
from controllers.account_controller import AccountController
from controllers.transaction_controller import TransactionController
from controllers.category_controller import CategoryController
from controllers.financial_goal_controller import FinancialGoalController as GoalController
from datetime import datetime

class MainWindow:
    def __init__(self):
        self.window = tk.Tk()
        self.window.title("Personal Finance Manager")
        self.window.geometry("400x500")

        self.account_ctrl = AccountController()
        self.transaction_ctrl = TransactionController()
        self.category_ctrl = CategoryController()
        self.goal_ctrl = GoalController()

        tk.Label(self.window, text="üí∞ Personal Finance Manager", font=("Arial", 16)).pack(pady=20)

        tk.Button(self.window, text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å—á—ë—Ç", width=30, command=self.add_account).pack(pady=5)
        tk.Button(self.window, text="üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å—á–µ—Ç–∞", width=30, command=self.show_accounts).pack(pady=5)
        tk.Button(self.window, text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é", width=30, command=self.add_transaction).pack(pady=5)
        tk.Button(self.window, text="üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", width=30, command=self.show_transactions).pack(pady=5)
        tk.Button(self.window, text="üéØ –î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å", width=30, command=self.add_goal).pack(pady=5)

        tk.Button(self.window, text="üö™ –í—ã–π—Ç–∏", width=30, command=self.window.quit).pack(pady=20)

        self.window.mainloop()

    def add_account(self):
        win = tk.Toplevel()
        win.title("–ù–æ–≤—ã–π —Å—á—ë—Ç")

        labels = ["ID", "User ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ë–∞–ª–∞–Ω—Å", "–í–∞–ª—é—Ç–∞"]
        entries = []
        for i, label in enumerate(labels):
            tk.Label(win, text=label).grid(row=i, column=0)
            entry = tk.Entry(win)
            entry.grid(row=i, column=1)
            entries.append(entry)

        def submit():
            try:
                acc_id = int(entries[0].get())
                user_id = int(entries[1].get())
                name = entries[2].get()
                balance = float(entries[3].get())
                currency = entries[4].get()

                existing = self.account_ctrl.dao.get_account_by_id(acc_id)
                if existing:
                    messagebox.showerror("–û—à–∏–±–∫–∞", f"–°—á—ë—Ç —Å ID {acc_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                    return

                self.account_ctrl.create_account(acc_id, user_id, name, balance, currency)
                messagebox.showinfo("–£—Å–ø–µ—Ö", "–°—á—ë—Ç —Å–æ–∑–¥–∞–Ω!")
                win.destroy()
            except ValueError:
                messagebox.showerror("–û—à–∏–±–∫–∞", "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞!")

        tk.Button(win, text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", command=submit).grid(row=5, column=0, columnspan=2, pady=10)

    def show_accounts(self):
        accounts = self.account_ctrl.dao.get_all_accounts()
        if not accounts:
            messagebox.showinfo("–°—á–µ—Ç–∞", "–°—á–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return
        msg = "\n".join([f"{a.account_name}: {a.balance} {a.currency}" for a in accounts])
        messagebox.showinfo("–°—á–µ—Ç–∞", msg)

    def add_transaction(self):
        win = tk.Toplevel()
        win.title("–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é")

        labels = ["ID", "User ID", "Account ID", "Category ID", "–°—É–º–º–∞", "–¢–∏–ø (income/expense)", "–í–∞–ª—é—Ç–∞", "–û–ø–∏—Å–∞–Ω–∏–µ"]
        entries = []
        for i, label in enumerate(labels):
            tk.Label(win, text=label).grid(row=i, column=0)
            entry = tk.Entry(win)
            entry.grid(row=i, column=1)
            entries.append(entry)

        def submit():
            try:
                tx_id = int(entries[0].get())
                user_id = int(entries[1].get())
                acc_id = int(entries[2].get())
                cat_id = int(entries[3].get())
                amount = float(entries[4].get())
                tx_type = entries[5].get().lower()
                if tx_type not in ("income", "expense"):
                    raise ValueError("–¢–∏–ø –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å income –∏–ª–∏ expense")
                currency = entries[6].get()
                desc = entries[7].get()

                self.transaction_ctrl.add_transaction(
                    tx_id, user_id, acc_id, cat_id, amount, tx_type, currency, desc
                )
                messagebox.showinfo("–£—Å–ø–µ—Ö", "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                win.destroy()
            except ValueError as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥: {e}")

        tk.Button(win, text="–î–æ–±–∞–≤–∏—Ç—å", command=submit).grid(row=len(labels), column=0, columnspan=2, pady=10)

    def show_transactions(self):
        transactions = self.transaction_ctrl.dao.get_all_transactions()
        if not transactions:
            messagebox.showinfo("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", "–ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.")
            return

        text = ""
        for tx in transactions:
            text += f"[{tx.transaction_id}] {tx.tx_type.upper()} ‚Äî {tx.amount} {tx.currency} | –°—á—ë—Ç: {tx.account_id} | –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {tx.category_id}\n"

        win = tk.Toplevel()
        win.title("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        text_box = tk.Text(win, width=60, height=20)
        text_box.pack(padx=10, pady=10)
        text_box.insert("1.0", text)
        text_box.config(state="disabled")

    def add_goal(self):
        win = tk.Toplevel()
        win.title("–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Ü–µ–ª—å")

        labels = ["ID", "User ID", "–ù–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏", "–¶–µ–ª–µ–≤–∞—è —Å—É–º–º–∞", "–î–µ–¥–ª–∞–π–Ω (–ì–ì–ì–ì-–ú–ú-–î–î)", "–¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å"]
        entries = []
        for i, label in enumerate(labels):
            tk.Label(win, text=label).grid(row=i, column=0)
            entry = tk.Entry(win)
            entry.grid(row=i, column=1)
            entries.append(entry)

        def submit():
            try:
                goal_id = int(entries[0].get())
                user_id = int(entries[1].get())
                name = entries[2].get()
                target_amount = float(entries[3].get())
                deadline = entries[4].get()  # –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
                current_amount = float(entries[5].get())

                self.goal_ctrl.create_goal(goal_id, user_id, name, target_amount, current_amount, deadline)
                messagebox.showinfo("–£—Å–ø–µ—Ö", "–¶–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                win.destroy()
            except ValueError as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥: {e}")

        tk.Button(win, text="–î–æ–±–∞–≤–∏—Ç—å", command=submit).grid(row=len(labels), column=0, columnspan=2, pady=10)
